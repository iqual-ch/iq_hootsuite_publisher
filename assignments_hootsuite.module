<?php

/**
 * @file
 */

use Drupal\file\Entity\File;
use Drupal\node\NodeInterface;
use Drupal\Core\Entity\EntityInterface;
use GuzzleHttp\RequestOptions;

/**
 *
 */
function assignments_hootsuite_node_update(EntityInterface $entity) {
  $postManager = \Drupal::service('assignments_hootsuite.post_manager');
  $postManager->handleNode($entity);
}

/**
 *
 */
function assignments_hootsuite_node_insert(EntityInterface $entity) {
  $postManager = \Drupal::service('assignments_hootsuite.post_manager');
  $postManager->handleNode($entity);
}

/**
 *
 */
function assignments_hootsuite_node_predelete(EntityInterface $entity) {
  if ($entity->hasField('field_hs_assignment')) {
    $assignments = $entity->field_hs_assignment;

    foreach ($assignments as $item) {
      // If is social media type.
      if ($item->entity != NULL && !$item->entity->field_hs_profile_id->isEmpty()) {
        $postManager = \Drupal::service('assignments_hootsuite.post_manager');
        $postManager->deletePost($item->entity);
      }
    }
  }
}

/**
 *
 */
function assignments_hootsuite_assignment_predelete(EntityInterface $entity) {
  $postManager = \Drupal::service('assignments_hootsuite.post_manager');
  $postManager->deletePost($entity);
}

/**
 *
 */
function assignments_hootsuite_entity_translation_create(EntityInterface $translation) {
  if ($translation->hasField('field_hs_assignment')) {
    $translation->field_hs_assignment->setValue([]);
  }
}
