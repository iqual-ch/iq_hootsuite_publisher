<?php

function iq_hootsuite_publisher_preprocess_entity_add_list(&$variables)
{

  \Drupal::logger('iq_hootsuite_publisher')->notice('Triggered: iq_hootsuite_publisher_preprocess_entity_add_list');


    foreach ($variables['bundles'] as $bundle_name => $bundle_info) {
        if ($bundle_name == 'facebook_page_transgourmet' ) {



          //   $route_name = "entity.assignment.add_page";
          //   $nid = \Drupal::request()->query->get('node');
          //   $options = ['absolute' => true];
          //   $url = \Drupal\Core\Url::fromRoute($route_name);
          //   $url = \Drupal\Core\Url::fromUserInput($url->toString() . '/' . $bundle_name . '?node=' . $nid, $options);

          //   // $url = $url->toString();
          //   // echo $url . '<br />';
          //   // die();
          // $bundle_info['add_link']->setUrl($url);
          //   //
          //   // print_r();
        }
    }
}

function iq_hootsuite_publisher_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
  if( $entity->id() && $entity->getEntityType()->id() == 'assignment' && $entity->field_tg_social_profile_id->value ){
    send_post( $entity );
  }
}

function iq_hootsuite_publisher_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {
  if( $entity->getEntityType()->id() == 'assignment' ){
    send_post( $entity );
  }
}

function iq_hootsuite_publisher_entity_predelete(Drupal\Core\Entity\EntityInterface $entity) {
  if( $entity->getEntityType()->id() == 'assignment' ){
    delete_post( $entity );
  }
}

function send_post( &$entity ){
  $config = \Drupal::config('iq_hootsuite_publisher.settings');
  $configTokens = \Drupal::config('iq_hootsuite_publisher.tokens');

  // delete post from hootsuite if already exists
  if( $entity->field_tg_hootsuite_post_id->value ){
    delete_post( $entity );
    $entity->field_tg_hootsuite_post_id->value = null;
  }

  // send new post
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {

    $entity_data = [
      'node' => Drupal\node\Entity\Node::load($node->id()),
    ];

    $token_service = \Drupal::service('token');

    $request_body_message = [
      'text'              => $token_service->replace($entity->field_post->value, $entity_data),
      'socialProfileIds'  => [$entity->field_tg_social_profile_id->value],
      'scheduledSendTime' => $entity->field_tg_date->value,
    ];

    if( $entity->field_image->value ){
      $request_body_message['mediaUrls'] = [
        ['url' => $token_service->replace($entity->field_image->value, $entity_data)]
      ];
    }

    // $hootsuite_client = \Drupal::service('iq_hootsuite_publisher.client');
    // $hootsuite_post_id = $hootsuite_client->connect( 'post', 'endpoioint', '', $request_body_message );  // return id of post from hootsuite
    // $entity->field_tg_hootsuite_post_id = $hootsuite_post_id;

    \Drupal::logger('iq_hootsuite_publisher')->notice('sent post: '.$entity->id().serialize( $request_body_message ) );
  }
}


function delete_post( &$entity ){
  $request_body_delete = [
    'messageId' => $entity->field_tg_hootsuite_post_id->value
  ];

//  $hootsuite_client = \Drupal::service('iq_hootsuite_publisher.client');
//  $hootsuite_client->connect( 'delete', 'endpoioint', '', $request_body_delete );

  \Drupal::logger('iq_hootsuite_publisher')->notice('deleted post: '.$entity->id().'. Message body: '.serialize( $request_body_delete ) );
}
